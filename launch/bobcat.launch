<?xml version="1.0" encoding="UTF-8"?>
<launch>
  <!-- Vehicle name for namespace and topic id -->
  <arg name="vehicle" default="H01" />
  <arg name="ns" default="/$(arg vehicle)" />
  <!-- Type of node.  Current options are 'robot' and 'base' -->
  <arg name="type" default="robot" />
  <!-- List of the beacons this robot is carrying -->
  <arg name="myBeacons" default="" />
  <!-- Total number of beacons across all deployed agents.  Higher is ok. -->
  <arg name="totalBeacons" default="16" />
  <!-- Whether to enable smart beacons or not -->
  <arg name="smartBeacons" default="false" />
  <!-- List of all potentially deployed neighbors.  Determines what topics are subscribed. -->
  <arg name="potentialNeighbors" default="" />
  <!-- Rate to run the node at -->
  <arg name="rate" default="1" />
  <!-- Whether to republish neighbor topics for visualization or other needs -->
  <arg name="viz" default="false" />
  <!-- Whether to use simulated comms -->
  <arg name="simcomms" default="false" />
  <!-- Whether to run the agent solo (simulates always in comm with base) -->
  <arg name="solo" default="false" />
  <!-- Whether to share pose graph.  Disabled by default here but enabled in robot launch. -->
  <arg name="sharePoseGraph" default="false" />
  <!-- Whether to transmit images. Disable for low bandwidth situations.  May be different on each. -->
  <arg name="sendImages" default="true" />
  <!-- True ensures images are received by Base Station before exiting report -->
  <!-- Set to false if comms may be an issue.  CAUTION: This must be the same on all agents! -->
  <arg name="reportImages" default="true" />
  <!-- How many artifacts until we go back to comms to report -->
  <arg name="maxNewArtifacts" default="3" />
  <!-- How long to wait until reporting if we don't have enough new artifacts -->
  <arg name="maxReportTime" default="300" />
  <!-- Distance within which to fuse artifacts -->
  <arg name="fuseDist" default="3.0" />
  <!-- Distance between goal points for deconfliction -->
  <arg name="deconflictRadius" default="2.5" />
  <!-- Set to true if planner only outputs one goal at a time.  False if expecting goal array -->
  <arg name="singleGoalDeconflict" default="false" />
  <!-- How long without a message to consider 'lost comms' -->
  <arg name="commThreshold" default="2" />
  <!-- How long to wait before trying subsequent direct message requests -->
  <arg name="dmWait" default="3" />
  <!-- Whether to split DMs into single messages, or send as one large message -->
  <arg name="dmSplit" default="true" />
  <!-- How long to consider the robot as 'stuck'.  Use 3600 to disable for 1 hour -->
  <arg name="stopCheck" default="30" />
  <!-- Mapping range -->
  <arg name="mappingRange" default="5.0" />
  <!-- How far to drive from the anchor before automatically dropping a beacon -->
  <arg name="anchorDropDist" default="200" />
  <!-- How far to drive before automatically dropping a beacon -->
  <arg name="dropDist" default="200" />
  <!-- Minimum distance between nodes before dropping another beacon -->
  <arg name="junctionDist" default="10" />
  <!-- Minimum distance between beacons when dropping due to lost comms -->
  <arg name="redeployDist" default="5" />
  <!-- Whether to use turn detection to drop beacons -->
  <arg name="turnDetect" default="true" />
  <!-- Whether to delay beacon deployment so the trailing robot can drop instead -->
  <arg name="delayDrop" default="false" />
  <!-- Whether to reverse direction to drop a beacon due to comm loss -->
  <arg name="reverseDrop" default="false" />
  <!-- Topic to publish/subscribe data to neighbors -->
  <arg name="pubTopic" default="ma_data" />
  <!-- Topic for comms -->
  <arg name="commTopic" default="mesh_comm" />
  <!-- Whether to use UDP_Mesh comms (True) or Multimaster/Sim comms (False) -->
  <arg name="useMesh" default="false" />
  <!-- Whether to run in virtual mode.  If enabled, simcomms and useMesh should be false! -->
  <arg name="useVirtual" default="false" />
  <!-- Whether to use an external trajectory follower for fallback planning to home -->
  <arg name="useExtTraj" default="false" />
  <!-- Command to force planner to replan, without blacklisting -->
  <arg name="replanCommand" default="deconflict" />
  <!-- Topic the frontier exploration node listens to to calculate path home -->
  <arg name="homeTopic" default="report_artifact" />
  <!-- Other topics to monitor.  Need to make sure these are in multimaster settings on each agent! -->
  <arg name="stopTopic" default="estop" />
  <arg name="stopCommand" default="true" />
  <arg name="waitTopic" default="origin_detection_status" />
  <arg name="baseCommTopic" default="base_comm" />
  <arg name="odomTopic" default="odometry" />
  <arg name="exploreGoalTopic" default="frontier_goal_pose" />
  <arg name="explorePathTopic" default="planned_path" />
  <arg name="goalTopic" default="ma_goal" />
  <arg name="pathTopic" default="ma_goal_path" />
  <arg name="goalsTopic" default="goal_array" />
  <arg name="mapDiffsTopic" default="map_diffs" />
  <arg name="nodeTopic" default="at_node_center" />
  <arg name="artifactsTopic" default="artifact_array/relay" />
  <arg name="poseGraphTopic" default="lio_sam/mapping/path" />
  <!-- Approximate location of anchor node, for first beacon drop distance calc -->
  <arg name="anchorX" default="-5.0" />
  <arg name="anchorY" default="0.0" />
  <arg name="anchorZ" default="0.0" />
  <!-- Subsampling parameters for Goal Path and Pose Graph.  Set distance to 0 to disable. -->
  <arg name="subsampleDistanceGoalPath" default="0.5" />
  <arg name="subsampleAngleGoalPath" default="5" />
  <arg name="subsampleDistancePoseGraph" default="1.0" />
  <arg name="subsampleAnglePoseGraph" default="20" />

  <!-- The tf buffer, run externally for better cpu speed, only when using pose graph -->
  <node ns="$(arg ns)" pkg="tf2_ros" type="buffer_server" name="buffer_server" if="$(arg sharePoseGraph)" />

  <node ns="$(arg ns)" pkg="bobcat" type="bobcat_node.py" name="bobcat" output="screen" respawn="true">
    <!-- Parameters -->
    <param name="vehicle" value="$(arg vehicle)" />
    <param name="type" value="$(arg type)" />
    <param name="myBeacons" value="$(arg myBeacons)" />
    <param name="totalBeacons" value="$(arg totalBeacons)" />
    <param name="smartBeacons" value="$(arg smartBeacons)" />
    <param name="potentialNeighbors" value="$(arg potentialNeighbors)" />
    <param name="rate" value="$(arg rate)" />
    <param name="viz" value="$(arg viz)" />
    <param name="simcomms" value="$(arg simcomms)" />
    <param name="solo" value="$(arg solo)" />
    <param name="sharePoseGraph" value="$(arg sharePoseGraph)" />
    <param name="sendImages" value="$(arg sendImages)" />
    <param name="reportImages" value="$(arg reportImages)" />
    <param name="maxNewArtifacts" value="$(arg maxNewArtifacts)" />
    <param name="maxReportTime" value="$(arg maxReportTime)" />
    <param name="fuseDist" value="$(arg fuseDist)" />
    <param name="deconflictRadius" value="$(arg deconflictRadius)" />
    <param name="singleGoalDeconflict" value="$(arg singleGoalDeconflict)" />
    <param name="commThreshold" value="$(arg commThreshold)" />
    <param name="dmWait" value="$(arg dmWait)" />
    <param name="stopCheck" value="$(arg stopCheck)" />
    <param name="mappingRange" value="$(arg mappingRange)" />
    <param name="anchorDropDist" value="$(arg anchorDropDist)" />
    <param name="dropDist" value="$(arg dropDist)" />
    <param name="junctionDist" value="$(arg junctionDist)" />
    <param name="redeployDist" value="$(arg redeployDist)" />
    <param name="turnDetect" value="$(arg turnDetect)" />
    <param name="delayDrop" value="$(arg delayDrop)" />
    <param name="reverseDrop" value="$(arg reverseDrop)" />
    <param name="pubTopic" value="$(arg pubTopic)" />
    <param name="commTopic" value="$(arg commTopic)" />
    <param name="useMesh" value="$(arg useMesh)" />
    <param name="useVirtual" value="$(arg useVirtual)" />
    <param name="useExtTraj" value="$(arg useExtTraj)" />
    <param name="replanCommand" value="$(arg replanCommand)" />
    <param name="homeTopic" value="$(arg homeTopic)" />
    <param name="stopTopic" value="$(arg stopTopic)" />
    <param name="stopCommand" value="$(arg stopCommand)" />
    <param name="waitTopic" value="$(arg waitTopic)" />
    <param name="baseCommTopic" value="$(arg baseCommTopic)" />
    <param name="odomTopic" value="$(arg odomTopic)" />
    <param name="exploreGoalTopic" value="$(arg exploreGoalTopic)" />
    <param name="explorePathTopic" value="$(arg explorePathTopic)" />
    <param name="goalTopic" value="$(arg goalTopic)" />
    <param name="pathTopic" value="$(arg pathTopic)" />
    <param name="goalsTopic" value="$(arg goalsTopic)" />
    <param name="nodeTopic" value="$(arg nodeTopic)" />
    <param name="artifactsTopic" value="$(arg artifactsTopic)" />
    <param name="poseGraphTopic" value="$(arg poseGraphTopic)" />
    <param name="anchorX" value="$(arg anchorX)" />
    <param name="anchorY" value="$(arg anchorY)" />
    <param name="anchorZ" value="$(arg anchorZ)" />
    <param name="subsampleDistanceGoalPath" value="$(arg subsampleDistanceGoalPath)" />
    <param name="subsampleAngleGoalPath" value="$(arg subsampleAngleGoalPath)" />
    <param name="subsampleDistancePoseGraph" value="$(arg subsampleDistancePoseGraph)" />
    <param name="subsampleAnglePoseGraph" value="$(arg subsampleAnglePoseGraph)" />
  </node>
</launch>
